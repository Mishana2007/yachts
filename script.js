document.addEventListener("DOMContentLoaded", function () {
    const menuButton = document.querySelector(".menu-btn"); // –ò–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ —Ç–≤–æ–π –∫–ª–∞—Å—Å
    const closeMenuButton = document.getElementById("close-menu");
    const overlay = document.getElementById("overlay");
    const mobileMenu = document.getElementById("mobile-menu");

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É—é—Ç –ª–∏ —ç–ª–µ–º–µ–Ω—Ç—ã –ø–µ—Ä–µ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º —Å–æ–±—ã—Ç–∏–π
    if (menuButton && closeMenuButton && overlay && mobileMenu) {
        // –§—É–Ω–∫—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–µ–Ω—é
        function openMenu() {
            mobileMenu.classList.add("active");
            overlay.classList.add("active");
        }

        // –§—É–Ω–∫—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–µ–Ω—é
        function closeMenu() {
            mobileMenu.classList.remove("active");
            overlay.classList.remove("active");
        }

        // –ù–∞–∑–Ω–∞—á–∞–µ–º —Å–æ–±—ã—Ç–∏—è
        menuButton.addEventListener("click", openMenu); // –¢–µ–ø–µ—Ä—å —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ .menu-btn
        closeMenuButton.addEventListener("click", closeMenu);
        overlay.addEventListener("click", closeMenu);
    } else {
        console.error("‚ùå –û—à–∏–±–∫–∞: –û–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–µ–Ω—é –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ DOM.");
    }
});

// document.addEventListener("DOMContentLoaded", function () {
//     const rentButtons = document.querySelectorAll(".btn-rent");

//     rentButtons.forEach(button => {
//         button.addEventListener("click", function (event) {
//             event.preventDefault();
//             alert("–§—É–Ω–∫—Ü–∏—è –∞—Ä–µ–Ω–¥—ã –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –°–≤—è–∂–∏—Ç–µ—Å—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º!");
//         });
//     });
// });

document.addEventListener("DOMContentLoaded", function () {
    const rentButtons = document.querySelectorAll(".btn-rent");
    const modal = document.getElementById("booking-popup");
    const overlay = document.getElementById("popup-overlay");
    const closeModal = document.getElementById("booking-close");
    const submitBtn = document.getElementById("submit-btn");
    const policyCheckbox = document.getElementById("policy");
    const bookingForm = document.getElementById("booking-form");
    const boatImage = document.getElementById("booking-boat-img");
    const boatName = document.getElementById("booking-boat-name");

    // –î–ê–ù–ù–´–ï –¢–ï–õ–ï–ì–†–ê–ú-–ë–û–¢–ê
    const TELEGRAM_BOT_TOKEN = "5807422883:AAGkbgd6-bUeFRkguNHaJwZ77auV1XjAV7c";  // –í—Å—Ç–∞–≤—å —Å—é–¥–∞ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
    const TELEGRAM_CHAT_ID = "1301142907"; // –í—Å—Ç–∞–≤—å —Å—é–¥–∞ ID –∫–∞–Ω–∞–ª–∞ (—Å -100 –≤ –Ω–∞—á–∞–ª–µ, –µ—Å–ª–∏ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π)

    // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    rentButtons.forEach(button => {
        button.addEventListener("click", function (event) {
            event.preventDefault();
            const boatCard = this.closest(".catalog-item");
            const boatImgSrc = boatCard.querySelector(".catalog-image img").src;
            const boatTitle = boatCard.querySelector("h3").textContent;

            boatImage.src = boatImgSrc;
            boatName.textContent = boatTitle;

            modal.classList.add("active");
            overlay.classList.add("active");
        });
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –æ–∫–Ω–∞
    closeModal.addEventListener("click", closeBooking);
    overlay.addEventListener("click", closeBooking);

    function closeBooking() {
        modal.classList.remove("active");
        overlay.classList.remove("active");
        submitBtn.textContent = "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É"; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
        submitBtn.classList.remove("loading"); // –£–±–∏—Ä–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
        submitBtn.removeAttribute("disabled"); // –í–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É
    }

    // –ê–∫—Ç–∏–≤–∞—Ü–∏—è –∫–Ω–æ–ø–∫–∏ "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É" —Ç–æ–ª—å–∫–æ –ø—Ä–∏ —Å–æ–≥–ª–∞—Å–∏–∏ —Å –ø–æ–ª–∏—Ç–∏–∫–æ–π
    policyCheckbox.addEventListener("change", function () {
        if (this.checked) {
            submitBtn.classList.add("active");
            submitBtn.removeAttribute("disabled");
        } else {
            submitBtn.classList.remove("active");
            submitBtn.setAttribute("disabled", "true");
        }
    });

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏ –≤ Telegram
    bookingForm.addEventListener("submit", function (event) {
        event.preventDefault();

        if (submitBtn.disabled) return; // –ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ —É–∂–µ –Ω–∞–∂–∞—Ç–∞ ‚Äì –≤—ã—Ö–æ–¥–∏–º

        const userName = document.getElementById("name").value.trim();
        const userPhone = document.getElementById("phone").value.trim();
        const userComment = document.getElementById("comment").value.trim();
        const boatTitle = boatName.textContent;

        if (!userName || !userPhone) {
            alert("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∏–º—è –∏ —Ç–µ–ª–µ—Ñ–æ–Ω!");
            return;
        }

        // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –≤–æ –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏
        submitBtn.textContent = "–û—Ç–ø—Ä–∞–≤–∫–∞...";
        submitBtn.classList.add("loading");
        submitBtn.setAttribute("disabled", "true");

        // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        const message = `
üö§ *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –∞—Ä–µ–Ω–¥—É!*
üõ•Ô∏è –Ø—Ö—Ç–∞: *${boatTitle}*
üë§ –ò–º—è: *${userName}*
üìû –¢–µ–ª–µ—Ñ–æ–Ω: *${userPhone}*
üìù –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${userComment || "–ù–µ —É–∫–∞–∑–∞–Ω"}
        `;

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ Telegram —á–µ—Ä–µ–∑ API
        fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                chat_id: TELEGRAM_CHAT_ID,
                text: message,
                parse_mode: "Markdown"
            })
        })
        .then(response => response.json())
        .then(data => {
            if (data.ok) {
                alert("‚úÖ –ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!");
                bookingForm.reset();
                closeBooking();
            } else {
                alert("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
                submitBtn.textContent = "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É";
                submitBtn.classList.remove("loading");
                submitBtn.removeAttribute("disabled");
            }
        })
        .catch(error => {
            console.error("–û—à–∏–±–∫–∞:", error);
            alert("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
            submitBtn.textContent = "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É";
            submitBtn.classList.remove("loading");
            submitBtn.removeAttribute("disabled");
        });
    });
});


document.addEventListener("DOMContentLoaded", function () {
    const reviewContainer = document.querySelector(".reviews-container");
    
    let isDown = false;
    let startX;
    let scrollLeft;

    // –ù–∞—á–∞–ª–æ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è
    reviewContainer.addEventListener("mousedown", (e) => {
        isDown = true;
        reviewContainer.classList.add("active");
        startX = e.pageX - reviewContainer.offsetLeft;
        scrollLeft = reviewContainer.scrollLeft;
    });

    // –ö–æ–Ω–µ—Ü –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è
    reviewContainer.addEventListener("mouseleave", () => {
        isDown = false;
        reviewContainer.classList.remove("active");
    });

    reviewContainer.addEventListener("mouseup", () => {
        isDown = false;
        reviewContainer.classList.remove("active");
        snapToNearest();
    });

    // –î–≤–∏–∂–µ–Ω–∏–µ –ø–æ –æ—Å–∏ X
    reviewContainer.addEventListener("mousemove", (e) => {
        if (!isDown) return;
        e.preventDefault();
        const x = e.pageX - reviewContainer.offsetLeft;
        const walk = (x - startX) * 2; // –°–∫–æ—Ä–æ—Å—Ç—å –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
        reviewContainer.scrollLeft = scrollLeft - walk;
    });

    // –§—É–Ω–∫—Ü–∏—è —Ñ–∏–∫—Å–∞—Ü–∏–∏ –æ—Ç–∑—ã–≤–∞
    function snapToNearest() {
        const reviewWidth = 340; // –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —à–∏—Ä–∏–Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–∏ + –æ—Ç—Å—Ç—É–ø—ã
        const scrollPosition = reviewContainer.scrollLeft;
        const nearestReview = Math.round(scrollPosition / reviewWidth) * reviewWidth;
        
        reviewContainer.scrollTo({
            left: nearestReview,
            behavior: "smooth"
        });
    }
});
